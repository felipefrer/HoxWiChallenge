@model IEnumerable<HoxWiChallenge.Web.Models.ViewModel.ForeignViewModel>

@{
    ViewBag.Title = "Index";
}

<hr />

<div></div>
<div id="foreignModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Foreign</h5>
            </div>
            <div id="modalBody" class="modal-body">

            </div>
            <div class="modal-footer">
                <button id="btnModal" type="button" class="btn btn-primary">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="form-group">
    <button id="newForeign" type="button" class="btn btn-primary">
        <span class="glyphicon glyphicon-plus"></span>
        New
    </button>
</div>

<table id="gridForeign" class="table table-condensed table-hover table-striped">
    <thead>
        <tr>
            <th data-column-id="Id" data-type="numeric" visible="false">Id</th>
            <th data-column-id="FistName">Fist Name</th>
            <th data-column-id="SureName">Sure Name</th>
            <th data-column-id="BornDate" data-converter="datetime">Born Date</th>
            <th data-column-id="Nationality">Nationality</th>
            <th data-column-id="Arrived" data-converter="datetime">Arrived Date</th>
            <th data-column-id="action" data-formatter="actions" data-sortable="false"></th>
        </tr>
    </thead>
</table>


@section scripts {

    <link href="~/Content/jquery.bootgrid.css" rel="stylesheet" />
    <link href="~/Content/toastr.css" rel="stylesheet" />
    <link href="~/Content/jquery.alertable.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.bootgrid.js"></script>
    <script src="~/Scripts/jquery.alertable.js"></script>
    <script src="~/Scripts/toastr.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script type="text/javascript">

    $(document).ready(configControls);

    function configControls() {

        configBootgrid();

        toastrConfig();

        newClickHandler();
    }

    function configBootgrid() {

        var grid = $("#gridForeign").bootgrid({
            ajax: true,
            url: "@Url.Action("GetForeigns")",
            formatters: {
                "actions": function (column, row) {
                    return "<button data-row-id=\"" + row.Id + "\" type=\"button\" class=\"btn btn-warning btn-xs command-edit\">" +
                        "<span class=\"glyphicon glyphicon-edit\"></span>" +
                        "</button>" +
                        " " +
                        "<button data-row-id=\"" + row.Id + "\" type=\"button\" class=\"btn btn-danger btn-xs command-delete\">" +
                        "<span class=\"glyphicon glyphicon-remove\"></span>" +
                        "</button>";
                },
                converters: {
                    datetime: {
                        from: function (value) { return moment(value); },
                        to: function (value) { return moment(value).format("L"); }
                    }
                }
            }
        }).on("loaded.rs.jquery.bootgrid", function () {
            /* Executes after data is loaded and rendered */
            grid.find(".command-edit").on("click", function (e) {
                editForeign($(this).data("row-id"));
            }).end().find(".command-delete").on("click", function (e) {
                deleteForeign($(this).data("row-id"));
            });
        });

    }


    function toastrConfig() {

        toastr.options = {
            "closeButton": false,
            "debug": false,
            "newestOnTop": false,
            "progressBar": false,
            "positionClass": "toast-top-right",
            "preventDuplicates": true,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
    }

    function newClickHandler() {

        $("#newForeign").on("click", function(event) {

            event.preventDefault();
            openModel()
        })
    }

    function openModel()
    {

        // Load contente into the modal body
        $(".modal-body").load("@Url.Action("ForeignForm")", function () {

            // showing modal
            $("#foreignModal").modal({

                show: true,
                keyboard: false,
                backdrop: 'static',
            });

        });

        // Config button into the modal.
        $("#btnModal").on("click", function (event) {

            $.post("@Url.Action("Create")", $("form").serialize(), function (data, status) {

            }).done(function (data) {

                toastr[data.Success == true ? "success" : "warning"](data.Message);

            }).fail(function (data) {

                toastr["error"](data.Message);
            });
        });
    }

    function deleteForeign(hid) {

        $.alertable.confirm("Are you sure about this?").then(function () {

            $.post("@Url.Action("Delete")", { hidForeign: hid }, function (data, status) {

            }).done(function (data) {

                toastr[data.Success == true ? "success" : "warning"](data.Message);

            }).fail(function (data) {

                toastr["error"](data.Message);
            })
        });

    }

    function editForeign(hid) {

        alert("Edit was clicked!");

    }

    function getRowId(btn)
    {
        return $(btn).closest("tr").find(".hidden").val();
    }

    </script>

}