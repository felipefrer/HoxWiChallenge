@model HoxWiChallenge.Web.Models.ViewModel.ForeignViewModel

<div class="row">
    <div class="col-md-9 col-md-offset-3">

        @Html.ValidationSummary()

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.Id)
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname)
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender)
                    <br />
                    <div class="radio-inline">
                        <div class="pretty p-default p-round">
                            @Html.RadioButtonFor(model => model.Gender, Gender.Male)
                            <div class="state">
                                <label>Male</label>
                            </div>
                        </div>
                    </div>
                    <div class="radio-inline">
                        <div class="pretty p-default p-round">
                            @Html.RadioButtonFor(model => model.Gender, Gender.Female)
                            <div class="state">
                                <label>Female</label>
                            </div>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Gender)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthdayDate)
                    @Html.EditorFor(model => model.BirthdayDate, new { htmlAttributes = new { @class = "form-control date", @type = "text", @placeholder = "dd/MM/yyyy" } })
                    @Html.ValidationMessageFor(model => model.BirthdayDate)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nationality)
                    <br />
                    @Html.DropDownListFor(model => model.Nationality,
                                                                   new List<SelectListItem>() as IEnumerable<SelectListItem>,
                                                                   new Dictionary<string, object>() { { "class", "selectpicker show-tick" },
                                                                                           { "id", "nationality"},
                                                                                           {"title", "Choose your nationality" },
                                                                                           { "data-width", "280px" },
                                                                                           {"data-live-search", "false" } })
                    @Html.ValidationMessageFor(model => model.Nationality)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Arrival)
                    @Html.EditorFor(model => model.Arrival, new { htmlAttributes = new { @class = "form-control date", @type = "text", @placeholder = "dd/MM/yyyy" } })
                    @Html.ValidationMessageFor(model => model.Arrival)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Visa)
                    <br />
                    @Html.DropDownListFor(model => model.Visa,
                                               new List<SelectListItem>() as IEnumerable<SelectListItem>,
                                               new Dictionary<string, object>() { { "class", "selectpicker show-tick" },
                                                                        { "id", "visa"},
                                                                        {"title", "Choose your visa" },
                                                                        { "data-width", "280px" },
                                                                        {"data-live-search", "false" } })
                    @Html.ValidationMessageFor(model => model.Visa)
                </div>
            </div>
        }

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.formautofill.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}
